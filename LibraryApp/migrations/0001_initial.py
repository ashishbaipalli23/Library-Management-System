# Generated by Django 3.0.5 on 2023-07-20 11:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='BookAdd',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('btitle', models.CharField(max_length=50)),
                ('bauthor', models.CharField(max_length=50)),
                ('bedition', models.CharField(max_length=20)),
                ('bdes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('eid', models.CharField(max_length=20)),
                ('role_type', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TeacherProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tage', models.IntegerField()),
                ('tgen', models.CharField(choices=[('k', 'Select Your Gender'), ('M', 'Male'), ('F', 'Female')], default='k', max_length=5)),
                ('tbranch', models.CharField(choices=[('G', '----- Select Branch -----'), ('CSE', 'Computer Science and Engineering'), ('ECE', 'Electrical and Communication Engineering'), ('EEE', 'Electrical and Electronics Engineering'), ('CIVIL', 'Civil Engineering'), ('MECH', 'Mechanical Engineering')], default='G', max_length=50)),
                ('texpr', models.IntegerField()),
                ('tdesg', models.CharField(max_length=50)),
                ('tstatus', models.BooleanField(default=0)),
                ('tch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StdProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sage', models.IntegerField()),
                ('sgen', models.CharField(choices=[('h', 'Select Your Gender'), ('M', 'Male'), ('F', 'Female')], default='h', max_length=5)),
                ('sbranch', models.CharField(choices=[('G', '----- Select Branch -----'), ('CSE', 'Computer Science and Engineering'), ('ECE', 'Electrical and Communication Engineering'), ('EEE', 'Electrical and Electronics Engineering'), ('CIVIL', 'Civil Engineering'), ('MECH', 'Mechanical Engineering')], default='G', max_length=6)),
                ('syear', models.CharField(choices=[('0', '----- Select Year -----'), ('1', '1st Year'), ('2', '2nd Year'), ('3', '3rd Year'), ('4', '4th Year')], default='0', max_length=3)),
                ('sstatus', models.BooleanField(default=0)),
                ('std', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
